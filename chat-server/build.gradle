plugins {
    id 'java'
    id 'org.springframework.boot' version "3.0.2"
    id 'io.spring.dependency-management' version "1.1.0"
}

group = "com.carrot.chat"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = JavaVersion.VERSION_17

springBoot {
    mainClass = "CarrotChatApplication"
}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java", "build/generated/sources/annotationProcessor/java"]
        }
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.reflections:reflections:0.10.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4.1'

    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    runtimeOnly 'com.h2database:h2'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
}

tasks.withType(Jar).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes["Main-Class"] = "com.carrot.CarrotChatApplication"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

clean {
    delete file('src/main/generated')
}